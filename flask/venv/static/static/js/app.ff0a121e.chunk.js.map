{"version":3,"sources":["screens/NotFoundScreen.tsx","constants/Colors.ts","components/expo-examples/Themed.tsx","components/Layout.tsx","components/Fixed/ToolBar.tsx","components/Fixed/Card.tsx","components/Basic.tsx","components/List.tsx","constants/Data.ts","backend/Naughty.tsx","screens/TabOneScreen.tsx","screens/TabTwoScreen.tsx","screens/TabThreeScreen.tsx","screens/TabFourScreen.tsx","screens/TabFiveScreen.tsx","navigation/BottomTabNavigator.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","hooks/useColorScheme.web.ts","assets/fonts/SpaceMono-Regular.ttf","assets/fonts/LongCang-Regular.ttf","assets/fonts/MaShanZheng-Regular.ttf","assets/fonts/ZCOOLXiaoWei-Regular.ttf"],"names":["NotFoundScreen","navigation","View","style","styles","container","Text","title","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","colorFromProps","Colors","lightColor","darkColor","otherProps","Row1","children","paddingHorizontal","flexDirection","Flex1","Swiper1","page","onChangePage","useEffect","idx","scroll","undefined","scrollTo","x","width","Dimensions","get","ScrollView","ref","horizontal","pagingEnabled","scrollEventThrottle","onScroll","event","newPos","nativeEvent","contentOffset","Math","floor","ToolBar1","IconButton1","icon","fontFamily","type","size","ToolBar2","ToolBar3","ToolBar4","win","Card1","memo","data","uri","ImageButton1","navTo","Card2","Card3","radius","borderWidth","margin","Card2and3","user","images","List3","dataList","Card","Card8","Card4","Card5","ImageButton2","Card6","Card7","TextButton1","texts","useState","ratio","video","Video","source","isMuted","resizeMode","isLooping","height","useNativeControls","navParams","nav","useNavigation","navigate","Icon","MaterialCommunityIcons","name","FontAwesome","AntDesign","borderRadius","borderColor","Img","overflow","Image","ImagePicker1","imageList","setImageList","ExpoImagePicker","a","async","mediaTypes","All","allowsEditing","allowsMultipleSelection","result","cancelled","newImageList","selected","map","imageInfo","List1","numColumns","FlatList","keyExtractor","item","index","renderItem","List2","sectionList","SectionList","sections","renderSectionHeader","section","setPage","position","alignSelf","zIndex","length","newPage","key","Array","fill","data2","data2List","srcs","Object","values","色色资源站","玖玖资源站","狼少年资源站","富二代资源站","字幕网资源站","久草资源站","JAV名优资源站","利来资源站","博天堂资源站","环亚资源站","TabOneScreen","arr","pages","i","buttons","child","src","srcIdx","fetch","mode","then","res","console","log","catch","e","BottomTab","createBottomTabNavigator","BottomTabNavigator","Navigator","initialRouteName","tabBarOptions","activeTintColor","Screen","component","options","tabBarIcon","TabBarIcon","TabTwoScreen","TabBarIcon2","TabThreeScreen","TabFourScreen","TabFiveScreen","marginBottom","MaterialIcons","prefixes","Linking","config","screens","Root","TabOne","TabTwo","TabThree","TabFour","TabFive","NotFound","Navigation","colorScheme","NavigationContainer","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createStackNavigator","screenOptions","headerShown","App","React","isLoadingComplete","setLoadingComplete","SplashScreen","Font","Ionicons","font","require","warn","useCachedResources","StatusBar","module","exports"],"mappings":"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","file":"static/js/app.ff0a121e.chunk.js","sourcesContent":["import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../../constants/Colors';\nimport useColorScheme from '../../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","\r\nimport React, {ReactNode, useEffect} from 'react'\r\nimport { Dimensions, ScrollView } from 'react-native'\r\nimport {View } from './expo-examples/Themed'\r\n\r\nexport {Row1, Flex1, Swiper1}\r\n\r\nfunction Row1({\r\n  children, flex, paddingHorizontal\r\n}:{\r\n  children: ReactNode, flex?: number, paddingHorizontal?:number\r\n}){\r\n  return(\r\n    <View style={{flexDirection:'row', alignItems:'center', flex, paddingHorizontal}}>\r\n      {children}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction Flex1({\r\n  children, flex=1\r\n}:{\r\n  children?: ReactNode, flex?: number\r\n}){\r\n  return(\r\n    <View style={{flex: flex}}>\r\n      {children}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction Swiper1({children, page, onChangePage=()=>{}}:{\r\n  children?: ReactNode, page?:number, onChangePage?:(page:number)=>any\r\n}){\r\n  useEffect(()=> {scrollTo(page)}, [page] )\r\n  const width = Dimensions.get('window').width\r\n\r\n  /*const [pos, setPos] = useState(0)\r\n  var activeIdx = Math.floor(newPos/width)\r\n  const buttons = Children.map(children, (child,idx)=>(\r\n    <IconButton1 key={idx} text={idx+''} flex={1} justifyContent={'center'} color={activeIdx===idx?'blue' : 'grey'} \r\n      onPress={()=> scrollTo(idx) }/>\r\n  ))*/\r\n\r\n  var scroll: ScrollView | null\r\n  function scrollTo(idx:number|undefined){\r\n    if(scroll && (idx!==undefined)){\r\n      scroll.scrollTo({x: width*idx })\r\n      //setPos(width*idx)\r\n    }\r\n  }\r\n\r\n  return(\r\n    <View style={{flex:1}}>\r\n      <ScrollView ref={ref=> scroll=ref } horizontal style={{flex:1}} pagingEnabled={true} scrollEventThrottle={0} \r\n      onScroll={(event)=>{\r\n        var newPos = event.nativeEvent.contentOffset.x\r\n        //setPos(newPos)\r\n        onChangePage(Math.floor(newPos/width))\r\n      }}>\r\n        {children}\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}","\r\nimport React from 'react'\r\n\r\nimport { Text } from '../expo-examples/Themed'\r\nimport { Row1, Flex1 } from '../Layout'\r\nimport { IconButton1, ImageButton1 } from '../Basic'\r\n\r\nexport {ToolBar1, ToolBar2, ToolBar3, ToolBar4}\r\n\r\nfunction ToolBar1(){\r\n  return(\r\n    <Row1>\r\n      <IconButton1 icon={'camera-outline'}/>\r\n      <Text style={{fontFamily:'LongCang', fontSize: 18}}>少年维特的烦恼 第1天 2020.10.18</Text>\r\n      <Flex1/>\r\n      <IconButton1 icon={'paper-plane-o'} type={2} size={20}/>\r\n    </Row1>\r\n  )\r\n}\r\n\r\nfunction ToolBar2(){\r\n  return(\r\n    <Row1>\r\n      <IconButton1 icon={'heart'} text={'1千'} color={'red'}/> \r\n      <IconButton1 icon={'comment-outline'} text={'1千'}/>\r\n      <IconButton1 icon={'paper-plane-o'} type={2} size={20}/>\r\n      <Flex1/>\r\n      <IconButton1 icon={'bookmark-outline'}/>\r\n    </Row1>\r\n  )\r\n}\r\n\r\nfunction ToolBar3(){\r\n  return(\r\n    <Row1 paddingHorizontal={10}>\r\n      <IconButton1 icon={'search'} type={2}/> \r\n      <IconButton1 text={'搜索'} color={'grey'} fontSize={18} flex={1}/>\r\n      <IconButton1 icon={'scan1'} type={3}/>\r\n    </Row1>\r\n  )\r\n}\r\n\r\nfunction ToolBar4(){\r\n  return(\r\n    <Row1 paddingHorizontal={10}>\r\n      <IconButton1 icon={'plus'}/> \r\n      <IconButton1 text={'用户名'} fontSize={18} flex={1}/>\r\n      <IconButton1 icon={'menu'}/>\r\n    </Row1>\r\n  )\r\n}","\r\nimport React, { memo, useState } from 'react'\r\nimport { Dimensions } from 'react-native'\r\nimport { Video } from 'expo-av'\r\n\r\nimport { ImageButton1, ImageButton2, IconButton1, TextButton1 } from '../Basic'\r\nimport { View } from '../expo-examples/Themed'\r\nimport { Row1, Flex1 } from '../Layout'\r\nimport { List1, List3 } from '../List'\r\nimport { ToolBar2 } from './ToolBar'\r\n\r\nexport {Card1, Card2, Card3, Card2and3, Card4, Card5, Card6, Card7, Card8}\r\n\r\nconst win = Dimensions.get('window')\r\n\r\nconst Card1 = memo(function Card1({data}: {data:any}){\r\n    const {uri, text} = data\r\n    return(\r\n        <ImageButton1 uri={uri} text={text} navTo={'TabFour'}/>\r\n    )\r\n})\r\n\r\nconst Card2 = memo(function Card2({data}: {data:any}){\r\n    const {uri, text} = data\r\n    return(\r\n        <Row1>\r\n            <ImageButton1 uri={uri} size={36}/>\r\n            <IconButton1 text={text} flex={1} fontSize={16}/>\r\n            <IconButton1 icon={'dots-vertical'} size={24}/>\r\n        </Row1>\r\n    )\r\n})\r\n\r\nconst Card3 = memo(function Card3({data}: {data:any}){\r\n    const {uri, text} = data\r\n    return(\r\n        <ImageButton1 uri={uri} size={win.width} radius={0} borderWidth={0} margin={0}/>\r\n    )\r\n})\r\n\r\nconst Card2and3 = memo(function Card2and3({data}: {data:any}){\r\n    const {user, images} = data\r\n    return(\r\n        <View>\r\n            <Card2 data={user}/>\r\n            <List3 dataList={images} Card={Card8}/> \r\n            <ToolBar2/>\r\n        </View>\r\n    )\r\n})\r\n\r\nconst Card4 = memo(function Card4({data}: {data:any}){\r\n    const {uri, text} = data\r\n    return(\r\n        <IconButton1 icon={'shopping'} text={text} size={20} borderWidth={2} paddingHorizontal={6}/>\r\n    )\r\n})\r\n\r\nconst Card5 = memo(function Card5({data}: {data:any}){\r\n    const {uri, text} = data\r\n    return(\r\n        <ImageButton2 uri={uri}/>\r\n    )\r\n})\r\n\r\nconst Card6 = memo(function Card6({data}: {data:any}){\r\n    const {uri, text} = data\r\n    return(\r\n        <Row1 paddingHorizontal={10}>\r\n            <ImageButton1 uri={uri} size={46}/>\r\n            <IconButton1 text={text} flex={1} fontSize={16}/>\r\n            <IconButton1 text={'关注'} size={20} borderWidth={2} paddingHorizontal={6} \r\n            color={'white'} backgroundColor={'skyblue'}/>\r\n        </Row1>\r\n    )\r\n})\r\n\r\nconst Card7 = memo(function Card7({data}: {data:any}){\r\n    const {uri, text} = data\r\n    return(\r\n        <Row1 paddingHorizontal={10}>\r\n            <ImageButton1 uri={uri} text={text}/>\r\n            <TextButton1 texts={[text, text]} flex={1}/>\r\n            <TextButton1 texts={[text, text]} flex={1}/>\r\n            <TextButton1 texts={[text, text]} flex={1}/>\r\n        </Row1>\r\n    )\r\n})\r\n\r\nconst Card8 = memo(function Card8({data}: {data:any}){\r\n    const [ratio, setRatio] = useState(9/16)\r\n    const {uri, text, video} = data\r\n    return(\r\n        <Video source={{ uri: video}} isMuted={false} resizeMode='contain' isLooping\r\n            style={{ width: win.width, height: win.width*ratio }} useNativeControls\r\n        />\r\n    )\r\n})","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Image, TouchableOpacity } from 'react-native'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport * as ExpoImagePicker from 'expo-image-picker'\r\nimport { MaterialCommunityIcons, FontAwesome, AntDesign } from '@expo/vector-icons'\r\n\r\n\r\nimport { Text, View } from './expo-examples/Themed'\r\nimport { Card3 } from './Fixed/Card'\r\nimport { List1 } from './List'\r\n\r\nexport {TextButton1, IconButton1, ImageButton1, ImageButton2, ImagePicker1}\r\n\r\nfunction TextButton1({\r\n  texts=[], \r\n  navTo, navParams, onPress=()=>{},\r\n  flex,  \r\n}:{\r\n  texts?: Array<string>,\r\n  navTo?: string, navParams?:any, onPress?: ()=>void, \r\n  flex?:number,\r\n}){\r\n  const nav = useNavigation()\r\n  function handlePress(){ if(navTo) nav.navigate(navTo, navParams); onPress() }\r\n  return(\r\n    <TouchableOpacity onPress={handlePress} style={{alignItems:'center', flex}}>\r\n      <Text style={{fontFamily:'MaShanZheng', fontSize:16, fontWeight:'bold', margin:6}}>{texts[0]}</Text>\r\n      <Text style={{fontFamily:'MaShanZheng',}}>{texts[1]}</Text>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nfunction IconButton1({\r\n  icon, text, color, backgroundColor, fontSize,\r\n  navTo, navParams, onPress=()=>{}, \r\n  size=26, margin=3, \r\n  type=1, borderWidth, paddingHorizontal, flex,\r\n  justifyContent,\r\n}:{ \r\n  icon?:string, text?: string, color?:string, backgroundColor?:string, fontSize?:number,\r\n  navTo?: string, navParams?:any, onPress?: ()=>void, \r\n  size?:number, margin?:number, \r\n  type?:number, borderWidth?:number, paddingHorizontal?:number, flex?:number,\r\n  justifyContent?:any,\r\n}){\r\n  const nav = useNavigation()\r\n  function handlePress(){ if(navTo) nav.navigate(navTo, navParams); onPress() }\r\n\r\n  var Icon\r\n  if(icon){\r\n    if(type===1) Icon = <MaterialCommunityIcons name={icon} size={size} style={{margin}} color={color}/>\r\n    else if(type===2) Icon = <FontAwesome name={icon} size={size} style={{margin}} color={color}/>\r\n    else if(type===3) Icon = <AntDesign name={icon} size={size} style={{margin}} color={color}/>\r\n  }\r\n  return(\r\n    <TouchableOpacity onPress={handlePress} style={{flexDirection:'row', alignItems:'center', margin,\r\n    borderRadius:10, borderColor:backgroundColor||'grey', backgroundColor,\r\n    borderWidth, paddingHorizontal, flex, justifyContent}}>\r\n      {Icon}\r\n      <Text style={{fontFamily:'MaShanZheng',fontSize,color, margin}}>{text}</Text>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nfunction ImageButton1({\r\n  uri, text, color, fontSize,\r\n  navTo, navParams, onPress=()=>{}, \r\n  size=68, margin=6, \r\n  radius=100, borderWidth=2, \r\n}:{\r\n  uri?:string, text?: string, color?:string, fontSize?:number,\r\n  navTo?: string, navParams?:any, onPress?: ()=>void, \r\n  size?:number, margin?:number, \r\n  radius?:number, borderWidth?:number, \r\n}){\r\n  const nav = useNavigation()\r\n  function handlePress(){ if(navTo) nav.navigate(navTo, navParams); onPress() }\r\n\r\n  var Img \r\n  if(uri){\r\n    Img =(\r\n      <View style={{ height:size, width:size, margin, \r\n        borderRadius:radius, borderWidth:borderWidth, padding: borderWidth, borderColor:'aqua', overflow:'hidden', \r\n      }}>\r\n        <Image source={{uri}} style={{flex:1, borderRadius: radius }}/>\r\n      </View>\r\n    )\r\n  }\r\n  return(\r\n    <TouchableOpacity onPress={handlePress} style={{alignItems:'center'}}>\r\n      {Img}\r\n      <Text style={{fontFamily:'MaShanZheng', color, fontSize}}>{text}</Text>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nfunction ImageButton2({\r\n  uri, \r\n  navTo, navParams, onPress=()=>{}, \r\n  size=120, margin=1, \r\n}:{\r\n  uri?:string, \r\n  navTo?: string, navParams?:any, onPress?: ()=>void, \r\n  size?:number, margin?:number, \r\n}){\r\n  const nav = useNavigation()\r\n  function handlePress(){ if(navTo) nav.navigate(navTo, navParams); onPress() }\r\n  return(\r\n    <TouchableOpacity onPress={handlePress}>\r\n      <Image source={{uri}} style={{flex:1, height:size, margin}}/>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nfunction ImagePicker1(){\r\n  const [imageList, setImageList] = useState([{}])\r\n  useEffect(()=>{ ExpoImagePicker.requestCameraRollPermissionsAsync() }, [])\r\n  async function handlePick(){\r\n    var result = await ExpoImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ExpoImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      allowsMultipleSelection: true,\r\n    })\r\n    if(!result.cancelled){\r\n      var newImageList = result.selected.map((imageInfo)=>({ uri: imageInfo.uri }))\r\n      setImageList(newImageList)\r\n    }\r\n  }\r\n  return(\r\n    <View>\r\n      <IconButton1 icon={'image'} onPress={handlePick}/>\r\n      <List1 dataList={imageList} Card={Card3} horizontal></List1>\r\n    </View>\r\n  )\r\n}\r\n\r\n","\r\nimport React, { NamedExoticComponent, useState } from 'react'\r\nimport { FlatList, SectionList, Text, View} from 'react-native'\r\nimport { IconButton1 } from './Basic'\r\n\r\nimport { Flex1, Swiper1 } from './Layout'\r\n\r\nexport {List1, List2, List3}\r\n\r\nfunction List1({\r\n  horizontal=false, dataList=[], Card, numColumns\r\n}:{\r\n  horizontal?:boolean, dataList?: Array<any>, Card: NamedExoticComponent<any>, numColumns?:number\r\n}){\r\n  return(\r\n    <FlatList horizontal={horizontal} data={dataList} keyExtractor={(item, index)=>index+''} renderItem={({item})=>{\r\n      return(<Flex1> <Card data={item}/> </Flex1>)\r\n    }} numColumns={numColumns}></FlatList>\r\n  )\r\n}\r\n\r\nfunction List2({\r\n  horizontal=false, sectionList=[], Card, \r\n}:{\r\n  horizontal?:boolean, sectionList?: Array<any>, Card: NamedExoticComponent<any>,\r\n}){\r\n  return(\r\n    <SectionList horizontal={horizontal} sections={sectionList} keyExtractor={(item, index)=>index+''} renderItem={({item})=>{\r\n      return(<Flex1> <Card data={item}/> </Flex1>)\r\n    }} renderSectionHeader={({section: {title}})=>(\r\n      <IconButton1 text={title} fontSize={26} flex={1}/>\r\n    )}></SectionList>\r\n  )\r\n}\r\n\r\nfunction List3({\r\n  dataList=[], Card\r\n}:{\r\n  dataList?: Array<any>, Card: NamedExoticComponent<any>\r\n}){\r\n  const [page, setPage] = useState(0)\r\n  return(\r\n    <Flex1>\r\n      <View style={{position:'absolute', alignSelf:'flex-end', zIndex:1}}>\r\n        <IconButton1 text={`${page+1}/${dataList.length}`} borderWidth={1} backgroundColor=\"black\" color=\"white\"\r\n        margin={6} onPress={()=>{ setPage( (page+1)%dataList.length ) }}/>\r\n      </View>\r\n      <Swiper1 page={page} onChangePage={(newPage)=> setPage(newPage) }>{dataList.map((data, index)=>(\r\n        <Flex1 key={index}> <Card data={data}/> </Flex1>\r\n      ))}</Swiper1>\r\n    </Flex1>\r\n  )\r\n}\r\n\r\n","\nexport {data, dataList, data2, data2List, section, sectionList}\n\nconst data = {\n  uri:'https://www.ghi888.com/wp-content/uploads/2019/11/bac9e968803160e06e541b05b19fee45-1024x768.jpg', \n  text:'三上悠亚',\n  video: 'http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4',\n}\nconst dataList = Array(5).fill(data)\n\nconst data2 = {\n  user: data,\n  images: dataList,\n}\nconst data2List = Array(5).fill(data2)\n\nconst section = {\n  title: '美女',\n  data: dataList,\n}\nconst sectionList = Array(5).fill(section)\n\n","\r\nexport {getNaughtyData1, test}\r\n\r\nconst srcsObj = {\r\n    色色资源站: \"http://sscj8.com/inc/jsonsapi.php?ac=videolist\",\r\n    玖玖资源站: \"http://99zywcj.com/inc/jsonsapi.php?ac=videolist\",\r\n    狼少年资源站: \"http://cjmygzy.com/inc/jsonsapi.php?ac=videolist\",\r\n    富二代资源站: \"http://f2dcj6.com/sapi/json?ac=videolist\",\r\n    字幕网资源站: \"http://zmcj88.com/sapi/json?ac=videolist\",\r\n    久草资源站: \"http://jcspcj8.co/sapi/json?ac==videolist\",\r\n    JAV名优资源站: \"http://mygzycj.com/sapi.php?ac=jsonvideolist\",\r\n    利来资源站: \"http://llzxcj.com/inc/json.php?ac=videolist\",\r\n    博天堂资源站: \"http://bttcj.com/inc/jsonsapi.php?ac=videolist\",\r\n    环亚资源站: \"http://wmcj8.com/inc/jsonsapi.php?ac=videolist\",\r\n}\r\nconst srcs = Object.values(srcsObj)\r\n\r\nfunction getNaughtyData1(srcIdx:number){\r\n    fetch(srcs[srcIdx], {mode:'no-cors'}).then(res=> console.log(srcIdx ,res) )\r\n    .catch(e=>{\r\n        console.log('err', srcIdx, e)\r\n    })\r\n}\r\n\r\nfunction test(){\r\n    srcs.map((src, idx)=> getNaughtyData1(idx) )\r\n}","\nimport * as React from 'react'\n\nimport { List1 } from '../components/List'\nimport { Card1, Card2and3, Card8 } from '../components/Fixed/Card'\nimport { ToolBar1, ToolBar2 } from '../components/Fixed/ToolBar'\nimport { Flex1 } from '../components/Layout'\nimport { dataList, data2List, data } from '../constants/Data'\nimport { View } from '../components/expo-examples/Themed'\n\nimport {getNaughtyData1, test} from '../backend/Naughty'\n\nexport default function TabOneScreen() {\n  return (\n    <Flex1>\n      <ToolBar1/>\n      <View>\n        <List1 dataList={dataList} Card={Card1} horizontal/>\n      </View>\n      <List1 dataList={data2List} Card={Card2and3}/>\n    </Flex1>\n  )\n}\n\n\ntest()","\nimport * as React from 'react'\n\nimport { List1 } from '../components/List'\nimport { Card4, Card5 } from '../components/Fixed/Card'\nimport { ToolBar3 } from '../components/Fixed/ToolBar'\nimport { Flex1 } from '../components/Layout'\nimport { dataList } from '../constants/Data'\nimport { View } from '../components/expo-examples/Themed'\n\nexport default function TabOneScreen() {\n  return (\n    <Flex1>\n      <ToolBar3/>\n      <View>\n        <List1 dataList={dataList} Card={Card4} horizontal/>\n      </View>\n      <List1 dataList={dataList} Card={Card5} numColumns={3}/>\n    </Flex1>\n  )\n}\n","\nimport React from 'react'\n\nimport { ImagePicker1 } from '../components/Basic'\nimport { Flex1 } from '../components/Layout'\n\nexport default function TabOneScreen() {\n  return (\n    <Flex1>\n      <ImagePicker1/>      \n    </Flex1>\n  )\n}\n","\nimport React from 'react'\n\nimport { List2 } from '../components/List'\nimport { Card6 } from '../components/Fixed/Card'\nimport { Flex1 } from '../components/Layout'\nimport { sectionList } from '../constants/Data'\n\nexport default function TabOneScreen() {\n  return (\n    <Flex1>\n      <List2 sectionList={sectionList} Card={Card6}/>\n    </Flex1>\n  )\n}\n","\nimport React, { useState } from 'react'\nimport { Dimensions, ScrollView, Text } from 'react-native'\n\nimport { List1, List2 } from '../components/List'\nimport { Card6, Card7, Card3 } from '../components/Fixed/Card'\nimport { Flex1, Row1, Swiper1 } from '../components/Layout'\nimport { data, data2, section, sectionList } from '../constants/Data'\nimport { ToolBar4 } from '../components/Fixed/ToolBar'\nimport { IconButton1 } from '../components/Basic'\nimport { View } from '../components/expo-examples/Themed'\n\nexport default function TabOneScreen() {\n  const [page, setPage] = useState(0)\n\n  const {user, images} = data2\n  const arr = Array(3).fill(1)\n  const pages = arr.map((i,idx)=>(\n    <View key={idx} style={{flex:1, width:'100vw', backgroundColor:'red'}}>\n      <Text>{idx}</Text>\n      <View>\n        <List1 dataList={images} Card={Card3} horizontal/> \n      </View>\n    </View>\n  ))\n  const buttons = arr.map((child,idx)=>(\n    <IconButton1 key={idx} text={idx+''} flex={1} justifyContent={'center'} color={page===idx?'blue' : 'grey'} \n      onPress={()=> setPage(idx) }/>\n  ))\n\n  return (\n    <Flex1>\n      <ToolBar4/>\n      <Card7 data={data}/>\n      <IconButton1 text={'编辑资料'} borderWidth={2} justifyContent=\"center\"/>\n      <Row1>\n        {buttons}\n      </Row1>\n      <Swiper1 page={page} onChangePage={(newPage)=> setPage(newPage) }>\n        {pages}      \n      </Swiper1>\n    </Flex1>\n  )\n}\n\n","import { Ionicons, MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport TabThreeScreen from '../screens/TabThreeScreen';\nimport TabFourScreen from '../screens/TabFourScreen';\nimport TabFiveScreen from '../screens/TabFiveScreen';\nimport { BottomTabParamList, TabOneParamList, TabTwoParamList } from '../types';\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\nexport default function BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}>\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"home-variant\" color={color} />,\n          \n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon2 name=\"search\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabThree\"\n        component={TabThreeScreen}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"plus-box-outline\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabFour\"\n        component={TabFourScreen}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"heart\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabFive\"\n        component={TabFiveScreen}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"account\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction TabBarIcon(props: { name: string; color: string }) {\n  return <MaterialCommunityIcons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\nfunction TabBarIcon2(props: { name: string; color: string }) {\n  return <MaterialIcons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/JianYa/1-2020.10.18')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          TabOne: {\n            screens: {\n              TabOneScreen: 'one',\n            },\n          },\n          TabTwo: {\n            screens: {\n              TabTwoScreen: 'two',\n            },\n          },\n          TabThree: {\n            screens: {\n              TabThreeScreen: 'three',\n            },\n          },\n          TabFour: {\n            screens: {\n              TabFourScreen: 'four',\n            },\n          },\n          TabFive: {\n            screens: {\n              TabFiveScreen: 'five',\n            },\n          },\n        },\n      },\n      NotFound: '*',\n    },\n  },\n};\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { RootStackParamList } from '../types';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n          'LongCang': require('../assets/fonts/LongCang-Regular.ttf'),\n          'MaShanZheng': require('../assets/fonts/MaShanZheng-Regular.ttf'),\n          'ZCOOLXiaoWei': require('../assets/fonts/ZCOOLXiaoWei-Regular.ttf'),\n          \n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","// useColorScheme from react-native does not support web currently. You can replace\n// this with react-native-appearance if you would like theme support on web.\nexport default function useColorScheme() {\n  return 'light';\n}","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/LongCang-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/MaShanZheng-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/ZCOOLXiaoWei-Regular.ttf\";"],"sourceRoot":""}