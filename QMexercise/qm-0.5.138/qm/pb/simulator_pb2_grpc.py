# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from qm.pb import simulator_pb2 as qm_dot_pb_dot_simulator__pb2


class SimulatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Simulate = channel.unary_stream(
        '/qm.grpc.results_analyser.Simulator/Simulate',
        request_serializer=qm_dot_pb_dot_simulator__pb2.SimulateRequest.SerializeToString,
        response_deserializer=qm_dot_pb_dot_simulator__pb2.SimulateResponse.FromString,
        )


class SimulatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Simulate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SimulatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Simulate': grpc.unary_stream_rpc_method_handler(
          servicer.Simulate,
          request_deserializer=qm_dot_pb_dot_simulator__pb2.SimulateRequest.FromString,
          response_serializer=qm_dot_pb_dot_simulator__pb2.SimulateResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'qm.grpc.results_analyser.Simulator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
